import type { Metadata } from 'next';

// export const metadata: Metadata = {
//   title: 'Post | Create Next App',
//   description: 'Generated by create next app',
// };

async function getData(id: string) {
  const response = await fetch(
    `https://jsonplaceholder.typicode.com/posts/${id}`
  );
  return await response.json();
}

export const generateMetadata = async (props: Props): Promise<Metadata> => {
  const post = await getData(props.params.id);

  return {
    title: `${post.title} | Create Next App`,
    description: 'Generated by create next app',
  };
};

type Props = {
  params: {
    id: string;
  };
};

export default async function PostPage(props: Props) {
  const post = await getData(props.params.id);

  if (Object.keys(post).length == 0) {
    throw new Error('CUSTOM ERROR');
  }

  return (
    <div>
      <h1>PostPage {props.params.id}</h1>
      <div>{post.id}</div>
      <div>{post.title}</div>
      <div>{post.body}</div>
    </div>
  );
}
